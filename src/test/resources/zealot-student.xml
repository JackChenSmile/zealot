<?xml version="1.0" encoding="UTF-8"?>
<zealots>

    <zealot id="commonStuCondition">
        <andMoreEqual match="?age > 0" field="s.n_age" value="age"/>
        <andBetween match="(?startBirthday != null) || (?endBirthday != null)" field="s.d_birthday" start="startBirthday" end="endBirthday"/>
    </zealot>

    <!-- 查询学生信息. -->
    <zealot id="queryStudents">
        SELECT
            *
        FROM
            t_student AS s
        INNER JOIN t_teacher AS t ON s.c_tid = t.c_id
        WHERE s.n_valid = 1
        <andLike match="?stuName != empty" field="s.c_name" value="stuName"/>
        <import zealotid="commonStuCondition" />
        <import match="?stuName == empty" zealotid="commonStuCondition" />
        <import namespace="userZealot" zealotid="queryTeacherCondition" value="teacher" />
        <andIn match="?sexs != empty" field="s.n_sex" value="sexs"/>
        ORDER BY s.c_id
        LIMIT 20 OFFSET 0
    </zealot>

    <!-- 根据Id查询学生信息. -->
    <zealot id="queryStudentById">
        SELECT * FROM t_student AS s WHERE
        <equal field="s.c_id" value="stuId"/>
    </zealot>

    <!-- 测试case标签的使用查询示例. -->
    <zealot id="queryByChoose">
        UPDATE t_student SET s.c_sex =
        <choose when="?sex == 0" then="'female'" when2="?sex == 1" then2="'male'" else="unknown" />
        , s.c_status =
        <choose when="?state" then="'yes'" else="'no'" />
        , s.c_age =
        <choose when="age > 60" then="'老年'" when2="age > 40" then2="'中年'" when3="age > 20" then3="'青年'" when4="age > 10" then4="'少年'" else="'幼年'" />
        WHERE s.c_id = '@{stuId}'
    </zealot>

    <!-- 测试not的情况. -->
    <zealot id="queryNotStudents">
        SELECT * FROM t_student AS s WHERE
        <notLike field="s.c_id" value="stuId"/>
        <andNotLike field="s.c_sex" value="sex"/>
        <orNotLike field="s.n_age" value="age"/>
    </zealot>

</zealots>